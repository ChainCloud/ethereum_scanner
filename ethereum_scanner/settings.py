"""
Django settings for ethereum_scanner project.

Generated by 'django-admin startproject' using Django 1.10.3.

For more information on this file, see
https://docs.djangoproject.com/en/1.10/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.10/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.10/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '#zc89&g+$$+!!vbwe=g$9-fn7burtj8s%*d5iy$^g2wlh6fhes'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # 3rd party
    'rest_framework',
    'rest_framework.authtoken',
    'constance',
    'constance.backends.database',
    'raven.contrib.django.raven_compat',
    'rest_auth',
    'django.contrib.sites',
    'allauth',
    'allauth.account',
    'rest_auth.registration',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.twitter',
    # Project
    'app_core',
    'app_auth',
    'app_sync',
    'app_tx_api',
    'app_follows',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    # 'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'app_core.middleware.DisableCSRF',
]

# MIDDLEWARE_CLASSES = (
#     'app_core.middleware.DisableCSRF',
# )

CSRF_COOKIE_SECURE = True
ROOT_URLCONF = 'ethereum_scanner.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')]
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'ethereum_scanner.wsgi.application'

# Database
# https://docs.djangoproject.com/en/1.10/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'ethereumscanner',
        'USER': 'ethereumscanner',
        'PASSWORD': 'qqqwww121',
        'HOST': '127.0.0.1',
        'PORT': '5432',
        'TEST': {
            'NAME': 'test_ethereumscanner',
        },
    },
}

# Password validation
# https://docs.djangoproject.com/en/1.10/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/1.10/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.10/howto/static-files/

STATIC_URL = '/static/'

CONSTANCE_BACKEND = 'constance.backends.database.DatabaseBackend'

MONGO_DATABASE_NAME = 'ethereum_scan'

CONSTANCE_CONFIG = {
    'RPC_SERVER_HOST': ('52.16.72.86', 'rpc server host'),
    'RPC_SERVER_PROTOCOL': ('IPC', 'IPC or HTTP'),
    'RPC_SERVER_HTTP_PORT': ('8545', 'rpc server port'),
    'RPC_SERVER_IPC_PATH': ('/home/che/.ethereum/geth.ipc', 'path to ethereum rpc file'),
    'SYNC_BLOCKS_POSITION': (0, 'how many block we synced from first one'),
    'MONGO_DATABASE_NAME': (MONGO_DATABASE_NAME, 'name of mongo db'),
    'MONGO_TEST_DATABASE_NAME': ('test_db', 'name of mongo test db'),
    'TIME_TO_SLEEP_BEFORE_CHECK_BLOCKS': (10, 'in seconds'),
    'MAX_ROWS_IN_API_RESPONSE': (200, 'how namy rows max we can receive in api request')
}

RAVEN_CONFIG = {
    'dsn': os.getenv('SENTRY_KEY'),
}

MEDIA_ROOT = 'media/'
ALLOWED_HOSTS = '*'

SITE_ID = 1

LOGIN_REDIRECT_URL = '/'
